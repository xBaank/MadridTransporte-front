name: Build & Publish Release APK

on:
  push:
    branches: ["master"]
    tags: [ "*" ]

permissions:
  contents: write

jobs:
  build:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [20.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
        - name: Checkout source
          uses: actions/checkout@v3

        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 20.x
            
        - name: install dependencies
          run: npm ci

        - name: Create Build Folder
          run: npm run build

        - name: Add android folder if not present
          run: if [ ! -d "./android" ]; then npx cap add android; fi

        - name: Capacitor sync
          run: npx cap sync

        - name: Capacitor update
          run: npx cap update

        - name: Capacitor copy
          run: npx cap copy
        
        - name: Make Gradle executable
          run: chmod +x ./android/gradlew
        
        # TODO: Check for folder structure in README for generating splash screen 
        - name: Generate icons and splash screen to android folder 
          run:  if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

        - name: Setup java
          uses: actions/setup-java@v3
          with:
            distribution: 'zulu'
            java-version: '17'
            cache: 'gradle'

        - name: Build APK
          run: cd ./android && ./gradlew assembleDebug --stacktrace

        - name: Upload APK
          uses: actions/upload-artifact@v1
          with:
            name: apk
            path: android/app/build/outputs/apk/debug/app-debug.apk 

  release:
    name: Release APK
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} 
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: MadridTransporte.apk
          asset_content_type: application/zip